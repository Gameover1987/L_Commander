<UserControl x:Class="L_Commander.App.Views.Controls.FileManagerTabControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:designMock="clr-namespace:L_Commander.App.Views.DesignMock"
             xmlns:app="clr-namespace:L_Commander.App"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:viewModels="clr-namespace:L_Commander.App.ViewModels"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:controls="clr-namespace:L_Commander.App.Views.Controls"
             xmlns:helpers="clr-namespace:L_Commander.UI.Helpers;assembly=L_Commander.UI"
             xmlns:infrastructure="clr-namespace:L_Commander.App.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="1200" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=designMock:DesignMockFileManagerTabViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type infrastructure:Tag}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.Column="0" Width="16" Height="16"
                               Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                               Stroke="Gray" StrokeThickness="1" RadiusX="0" RadiusY="0" Margin="0 0 0 0" />
                    <TextBlock Grid.Column="1" Text="{Binding Text}" Margin="6,0,0,0"/>
                </Grid>
            </DataTemplate>

            <ContextMenu x:Key="entryContextMenu" 
                         ItemsSource="{Binding ContextMenuItems}"
                         d:DataContext="{d:DesignInstance Type=viewModels:FileSystemEntryViewModel, IsDesignTimeCreatable=False}">
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                        <Setter Property="Header" Value="{Binding Header, Mode=OneWay}"/>
                        <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="IsCheckable" Value="{Binding IsCheckable}"/>
                        <Setter Property="Command" Value="{Binding Command}"/>
                        <Setter Property="InputGestureText" Value="{Binding GestureText}"/>
                        <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                        <Setter Property="ItemsSource" Value="{Binding Children}"/>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                                    <Setter Property="Header" Value="{Binding Header}"/>
                                    <Setter Property="Command" Value="{Binding Command}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                    <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Setter Property="IsCheckable" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                                        <Separator>
                                                            <Separator.Template>
                                                                <ControlTemplate TargetType="{x:Type Separator}">
                                                                    <Grid Margin="0 6 0 4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                        <Rectangle Height="1" Margin="20 0 1 1" 
                                                                            Fill="{DynamicResource MahApps.Brushes.Gray7}"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                            UseLayoutRounding="True" />
                                                                        <Rectangle Height="1" Margin="20 1 1 0"
                                                                            Fill="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                            UseLayoutRounding="True" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Separator.Template>
                                                        </Separator>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSeparator}" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type MenuItem}">
                                            <Separator>
                                                <Separator.Template>
                                                    <ControlTemplate TargetType="{x:Type Separator}">
                                                        <Grid Margin="0 6 0 4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Rectangle Height="1" Margin="20 0 1 1"
                                                                                Fill="{DynamicResource MahApps.Brushes.Gray7}"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                UseLayoutRounding="True" />
                                                            <Rectangle Height="1" Margin="20 1 1 0"
                                                                                Fill="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                UseLayoutRounding="True" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Separator.Template>
                                            </Separator>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Back"
                    Command="{Binding TopCommand}"/>
        <KeyBinding Key="F2"
                    Command="{Binding RenameCommand}"/>
        <KeyBinding Key="F7"
                    Command="{Binding MakeDirCommand}"/>
        <KeyBinding Key="Space"
                    Command="{Binding CalculateFolderSizeCommand}"/>
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Style="{StaticResource MahApps.Styles.Button.Circle}"
                        Command="{Binding RefreshCommand}">
                    <iconPacks:PackIconMaterial Kind="Refresh" Margin="6"/>
                </Button>
                <Button Style="{StaticResource MahApps.Styles.Button.Circle}" Margin="18,0,0,0"
                        Command="{Binding BackCommand}">
                    <iconPacks:PackIconMaterial Kind="ArrowLeft" Margin="6"/>
                </Button>
                <Button Style="{StaticResource MahApps.Styles.Button.Circle}" Margin="6,0,0,0"
                        Command="{Binding NextCommand}">
                    <iconPacks:PackIconMaterial Kind="ArrowRight" Margin="6"/>
                </Button>
                <Button Style="{StaticResource MahApps.Styles.Button.Circle}" Margin="6,0,0,0"
                        Command="{Binding TopCommand}">
                    <Button.LayoutTransform>
                        <RotateTransform Angle="-90"></RotateTransform>
                    </Button.LayoutTransform>
                    <iconPacks:PackIconMaterial Margin="6" Kind="ArrowRight"/>
                </Button>
                <Button Style="{StaticResource MahApps.Styles.Button.Circle}" Margin="18,0,0,0"
                        IsEnabled="{Binding FolderFilter.HasFilters}"
                        Click="FilterButton_OnClick">
                    <iconPacks:PackIconMaterial Margin="6" Kind="Filter"/>
                </Button>
            </StackPanel>
        </Grid>

        <controls:CustomDataGrid x:Name="dataGrid" Grid.Row="1" AutoGenerateColumns="False" Margin="0,6,0,0"
                                 ItemsSource="{Binding FolderView}"
                                 SelectedItem="{Binding SelectedFileSystemEntry}"
                                 IsReadOnly="True"
                                 Style="{StaticResource MahApps.Styles.DataGrid}"
                                 SelectionChanged="DataGrid_OnSelectionChanged"
                                 PreviewKeyDown="DataGrid_OnPreviewKeyDown"
                                 SelectionUnit="FullRow">
            <DataGrid.InputBindings>
                <KeyBinding Key="Enter"
                            Command="{Binding OpenCommand}"/>
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}"
                       BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource entryContextMenu}"/>
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                    <EventSetter Event="ContextMenuOpening" Handler="DataGridRow_ContextMenuOpening"/>
                    <EventSetter Event="ContextMenuClosing" Handler="DataGridRow_ContextMenuClosing"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn x:Name="tagsColumn" MaxWidth="100" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Height="16" Margin="2,0,0,0" Background="Transparent"
                                  ToolTip="{Binding TagsDescription}">
                                <ItemsControl ItemsSource="{Binding Tags}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type infrastructure:Tag}">
                                            <Rectangle Width="7" 
                                                       Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                                                       Margin="0,0,1,0">
                                                <Rectangle.RenderTransform>
                                                    <SkewTransform AngleX="-10"/>
                                                </Rectangle.RenderTransform>
                                            </Rectangle>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <iconPacks:PackIconMaterial Kind="Folder" Margin="2,0,0,0"
                                                            Visibility="{Binding IsFile, Converter={StaticResource BoolToInvisibilityConverter}}"/>
                                <Image Width="16" Height="16" Source="{Binding Icon}"
                                       Visibility="{Binding IsFile, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="fileNameColumn" Header="{x:Static app:Resources.DataGridColumnName_Path}" Width="*"
                                    Binding="{Binding Name}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn x:Name="typeColumn" Header="{x:Static app:Resources.DataGridColumnName_Type}" Width="Auto" MinWidth="60"
                                    Binding="{Binding Extension, Mode=OneWay}" />
                <DataGridTemplateColumn x:Name="totalSizeColumn" Header="{x:Static app:Resources.DataGridColumnName_Size}" Width="Auto" MinWidth="90"
                                        SortMemberPath="TotalSize">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TotalSize, Converter={StaticResource TotalSizeToStringConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="creationDateColumn" Header="{x:Static app:Resources.DataGridColumnName_CreationDate}" Width="120" CanUserResize="False"
                                    Binding="{Binding Created, Mode=OneWay, StringFormat='dd.MM.yyyy HH:mm:ss'}" />
            </DataGrid.Columns>
        </controls:CustomDataGrid>

        <mah:MetroProgressBar Grid.Row="2"
                              Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"
                              IsIndeterminate="{Binding IsBusy, Mode=OneWay}"/>
    </Grid>
</UserControl>
